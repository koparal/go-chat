basePath: /
definitions:
  chat.Client:
    type: object
  chat.Message:
    properties:
      content:
        type: string
      roomId:
        type: string
      username:
        type: string
    type: object
  chat.Room:
    type: object
  topic.Topic:
    properties:
      id:
        type: string
      name:
        type: string
      parent_id:
        type: string
    type: object
  user.CreateUserData:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  user.CreateUserResponse:
    properties:
      id:
        type: string
      username:
        type: string
    type: object
  user.LoginUserData:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  user.LoginUserResponse:
    properties:
      access_token:
        type: string
      id:
        type: string
      is_admin:
        type: boolean
      username:
        type: string
    type: object
host: localhost:8080/api/v1
info:
  contact: {}
  description: This is a chat server.
  termsOfService: http://swagger.io/terms/
  title: Chat Swagger API Doc.
  version: "2.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login with the provided credentials
      parameters:
      - description: User login data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/user.LoginUserData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.LoginUserResponse'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login as a user
      tags:
      - users
  /logout:
    post:
      consumes:
      - application/json
      description: Logout the user by clearing the JWT cookie
      produces:
      - application/json
      responses: {}
      summary: Logout user
      tags:
      - users
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided data
      parameters:
      - description: User data to register
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.CreateUserResponse'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - users
  /rooms/clients/{roomId}:
    get:
      consumes:
      - application/json
      description: Get the list of clients currently in a chat room
      parameters:
      - description: Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: Room ID
        in: path
        name: roomId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/chat.Client'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get clients in a chat room
      tags:
      - rooms
  /rooms/create:
    post:
      consumes:
      - application/json
      description: Create a new chat room with the provided data
      parameters:
      - description: Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: Room data to create
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/chat.Room'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chat.Room'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new chat room
      tags:
      - rooms
  /rooms/join/{roomId}:
    get:
      consumes:
      - application/json
      description: Join a chat room with the provided room ID, user ID, and username
      parameters:
      - description: Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: Room ID
        in: path
        name: roomId
        required: true
        type: string
      - description: User ID
        in: query
        name: userId
        required: true
        type: string
      - description: Username
        in: query
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chat.Message'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Join a chat room
      tags:
      - rooms
  /rooms/list:
    get:
      consumes:
      - application/json
      description: Get a list of all available chat rooms
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/chat.Room'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all chat rooms
      tags:
      - rooms
  /topics:
    get:
      consumes:
      - application/json
      description: Get a list of all topics
      parameters:
      - description: Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/topic.Topic'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all topics
      tags:
      - topics
    post:
      consumes:
      - application/json
      description: Create a new topic with the provided data
      parameters:
      - description: Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: Topic data to create
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/topic.Topic'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new topic
      tags:
      - topics
  /topics/{id}:
    post:
      consumes:
      - application/json
      description: Update a topic with the provided data
      parameters:
      - description: Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: Topic ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Updated topic data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/topic.Topic'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a topic
      tags:
      - topics
  /topics/delete/{id}:
    post:
      consumes:
      - application/json
      description: Delete a topic with the provided ID
      parameters:
      - description: Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: Topic ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a topic
      tags:
      - topics
schemes:
- http
swagger: "2.0"
